{"version":3,"file":"index.js","names":["upath","GetterPropType","TEMPLATE_TAG_REGEX","OutputClient","Verbs","AXIOS_DEPENDENCIES: GeneratorDependency[]","OutputHttpClient","isVue","getQueryHeader: ClientHeaderBuilder","REACT_DEPENDENCIES: GeneratorDependency[]","PARAMS_SERIALIZER_DEPENDENCIES: GeneratorDependency[]","SVELTE_QUERY_DEPENDENCIES_V3: GeneratorDependency[]","SVELTE_QUERY_DEPENDENCIES: GeneratorDependency[]","getSvelteQueryDependencies: ClientDependenciesBuilder","OutputHttpClient","REACT_QUERY_DEPENDENCIES_V3: GeneratorDependency[]","REACT_QUERY_DEPENDENCIES: GeneratorDependency[]","getReactQueryDependencies: ClientDependenciesBuilder","VUE_QUERY_DEPENDENCIES_V3: GeneratorDependency[]","VUE_QUERY_DEPENDENCIES: GeneratorDependency[]","getVueQueryDependencies: ClientDependenciesBuilder","OutputClient","GetterPropType","type","Verbs","params","generateQueryHeader: ClientHeaderBuilder","generateQuery: ClientBuilder","dependenciesBuilder: Record<\n  'react-query' | 'vue-query' | 'svelte-query',\n  ClientDependenciesBuilder\n>","client: ClientBuilder"],"sources":["../src/utils.ts","../src/client.ts","../src/index.ts"],"sourcesContent":["import {\n  getIsBodyVerb,\n  GetterProps,\n  GetterPropType,\n  isObject,\n  isString,\n  Mutator,\n  NormalizedMutator,\n  NormalizedQueryOptions,\n  OutputClient,\n  OutputClientFunc,\n  QueryOptions,\n  TEMPLATE_TAG_REGEX,\n  upath,\n  Verbs,\n} from '@orval/core';\nimport chalk from 'chalk';\n\nexport const normalizeQueryOptions = (\n  queryOptions: QueryOptions = {},\n  outputWorkspace: string,\n): NormalizedQueryOptions => {\n  return {\n    ...(queryOptions.usePrefetch ? { usePrefetch: true } : {}),\n    ...(queryOptions.useQuery ? { useQuery: true } : {}),\n    ...(queryOptions.useInfinite ? { useInfinite: true } : {}),\n    ...(queryOptions.useInfiniteQueryParam\n      ? { useInfiniteQueryParam: queryOptions.useInfiniteQueryParam }\n      : {}),\n    ...(queryOptions.options ? { options: queryOptions.options } : {}),\n    ...(queryOptions?.queryKey\n      ? {\n          queryKey: normalizeMutator(outputWorkspace, queryOptions?.queryKey),\n        }\n      : {}),\n    ...(queryOptions?.queryOptions\n      ? {\n          queryOptions: normalizeMutator(\n            outputWorkspace,\n            queryOptions?.queryOptions,\n          ),\n        }\n      : {}),\n    ...(queryOptions?.mutationOptions\n      ? {\n          mutationOptions: normalizeMutator(\n            outputWorkspace,\n            queryOptions?.mutationOptions,\n          ),\n        }\n      : {}),\n    ...(queryOptions.signal ? { signal: true } : {}),\n    ...(queryOptions.shouldExportMutatorHooks\n      ? { shouldExportMutatorHooks: true }\n      : {}),\n    ...(queryOptions.shouldExportQueryKey\n      ? { shouldExportQueryKey: true }\n      : {}),\n    ...(queryOptions.shouldExportHttpClient\n      ? { shouldExportHttpClient: true }\n      : {}),\n    ...(queryOptions.shouldSplitQueryKey ? { shouldSplitQueryKey: true } : {}),\n    ...(queryOptions.useOperationIdAsQueryKey\n      ? { useOperationIdAsQueryKey: true }\n      : {}),\n  };\n};\n\n// Temporary duplicate code before next major release\nconst normalizeMutator = (\n  workspace: string,\n  mutator?: Mutator,\n): NormalizedMutator | undefined => {\n  if (isObject(mutator)) {\n    if (!mutator.path) {\n      throw new Error(chalk.red(`Mutator need a path`));\n    }\n\n    return {\n      ...mutator,\n      path: upath.resolve(workspace, mutator.path),\n      default: (mutator.default || !mutator.name) ?? false,\n    };\n  }\n\n  if (isString(mutator)) {\n    return {\n      path: upath.resolve(workspace, mutator),\n      default: true,\n    };\n  }\n\n  return mutator;\n};\n\nexport function vueWrapTypeWithMaybeRef(props: GetterProps): GetterProps {\n  return props.map((prop) => {\n    const [paramName, paramType] = prop.implementation.split(':');\n    if (!paramType) return prop;\n    const name =\n      prop.type === GetterPropType.NAMED_PATH_PARAMS ? prop.name : paramName;\n\n    const [type, defaultValue] = paramType.split('=');\n    return {\n      ...prop,\n      implementation: `${name}: MaybeRef<${type.trim()}>${\n        defaultValue ? ` = ${defaultValue}` : ''\n      }`,\n    };\n  });\n}\n\nexport const vueUnRefParams = (props: GetterProps): string => {\n  return props\n    .map((prop) => {\n      if (prop.type === GetterPropType.NAMED_PATH_PARAMS) {\n        return `const ${prop.destructured} = unref(${prop.name});`;\n      }\n      return `${prop.name} = unref(${prop.name});`;\n    })\n    .join('\\n');\n};\n\nexport const wrapRouteParameters = (\n  route: string,\n  prepend: string,\n  append: string,\n): string => route.replaceAll(TEMPLATE_TAG_REGEX, `\\${${prepend}$1${append}}`);\n\nexport const makeRouteSafe = (route: string): string =>\n  wrapRouteParameters(route, 'encodeURIComponent(String(', '))');\n\nexport const isVue = (client: OutputClient | OutputClientFunc) =>\n  OutputClient.VUE_QUERY === client;\n\nexport const getHasSignal = ({\n  overrideQuerySignal = false,\n  verb,\n}: {\n  verb: Verbs;\n  overrideQuerySignal?: boolean;\n}) => overrideQuerySignal && (!getIsBodyVerb(verb) || verb === Verbs.POST);\n","import {\n  ClientHeaderBuilder,\n  generateFormDataAndUrlEncodedFunction,\n  generateMutatorConfig,\n  generateMutatorRequestOptions,\n  generateOptions,\n  GeneratorDependency,\n  GeneratorMutator,\n  GeneratorOptions,\n  GeneratorVerbOptions,\n  GetterResponse,\n  isSyntheticDefaultImportsAllow,\n  OutputHttpClient,\n  pascal,\n  toObjectString,\n} from '@orval/core';\nimport {\n  generateFetchHeader,\n  generateRequestFunction as generateFetchRequestFunction,\n} from '@orval/fetch';\n\nimport {\n  getHasSignal,\n  makeRouteSafe,\n  vueUnRefParams,\n  vueWrapTypeWithMaybeRef,\n} from './utils';\n\nexport const AXIOS_DEPENDENCIES: GeneratorDependency[] = [\n  {\n    exports: [\n      {\n        name: 'axios',\n        default: true,\n        values: true,\n        syntheticDefaultImport: true,\n      },\n      { name: 'AxiosRequestConfig' },\n      { name: 'AxiosResponse' },\n      { name: 'AxiosError' },\n    ],\n    dependency: 'axios',\n  },\n];\n\nexport const generateQueryRequestFunction = (\n  verbOptions: GeneratorVerbOptions,\n  options: GeneratorOptions,\n  isVue: boolean,\n) => {\n  return options.context.output.httpClient === OutputHttpClient.AXIOS\n    ? generateAxiosRequestFunction(verbOptions, options, isVue)\n    : generateFetchRequestFunction(verbOptions, options);\n};\n\nexport const generateAxiosRequestFunction = (\n  {\n    headers,\n    queryParams,\n    operationName,\n    response,\n    mutator,\n    body,\n    props: _props,\n    verb,\n    formData,\n    formUrlEncoded,\n    override,\n    paramsSerializer,\n  }: GeneratorVerbOptions,\n  { route: _route, context }: GeneratorOptions,\n  isVue: boolean,\n) => {\n  let props = _props;\n  let route = _route;\n\n  if (isVue) {\n    props = vueWrapTypeWithMaybeRef(_props);\n  }\n\n  if (context.output?.urlEncodeParameters) {\n    route = makeRouteSafe(route);\n  }\n\n  const isRequestOptions = override.requestOptions !== false;\n  const isFormData = !override.formData.disabled;\n  const isFormUrlEncoded = override.formUrlEncoded !== false;\n  const hasSignal = getHasSignal({\n    overrideQuerySignal: override.query.signal,\n    verb,\n  });\n\n  const isExactOptionalPropertyTypes =\n    !!context.output.tsconfig?.compilerOptions?.exactOptionalPropertyTypes;\n\n  const bodyForm = generateFormDataAndUrlEncodedFunction({\n    formData,\n    formUrlEncoded,\n    body,\n    isFormData,\n    isFormUrlEncoded,\n  });\n\n  if (mutator) {\n    const mutatorConfig = generateMutatorConfig({\n      route,\n      body,\n      headers,\n      queryParams,\n      response,\n      verb,\n      isFormData,\n      isFormUrlEncoded,\n      hasSignal,\n      isExactOptionalPropertyTypes,\n      isVue,\n    });\n\n    const bodyDefinition = body.definition.replace('[]', String.raw`\\[\\]`);\n    const propsImplementation =\n      mutator?.bodyTypeName && body.definition\n        ? toObjectString(props, 'implementation').replace(\n            new RegExp(`(\\\\w*):\\\\s?${bodyDefinition}`),\n            `$1: ${mutator.bodyTypeName}<${body.definition}>`,\n          )\n        : toObjectString(props, 'implementation');\n\n    const requestOptions = isRequestOptions\n      ? generateMutatorRequestOptions(\n          override.requestOptions,\n          mutator.hasSecondArg,\n        )\n      : '';\n\n    if (mutator.isHook) {\n      const ret = `${\n        override.query.shouldExportMutatorHooks ? 'export ' : ''\n      }const use${pascal(operationName)}Hook = () => {\n        const ${operationName} = ${mutator.name}<${\n          response.definition.success || 'unknown'\n        }>();\n\n        return useCallback((\\n    ${propsImplementation}\\n ${\n          isRequestOptions && mutator.hasSecondArg\n            ? `options${context.output.optionsParamRequired ? '' : '?'}: SecondParameter<ReturnType<typeof ${mutator.name}>>,`\n            : ''\n        }${hasSignal ? 'signal?: AbortSignal\\n' : ''}) => {${bodyForm}\n        return ${operationName}(\n          ${mutatorConfig},\n          ${requestOptions});\n        }, [${operationName}])\n      }\n    `;\n\n      const vueRet = `${\n        override.query.shouldExportMutatorHooks ? 'export ' : ''\n      }const use${pascal(operationName)}Hook = () => {\n        const ${operationName} = ${mutator.name}<${\n          response.definition.success || 'unknown'\n        }>();\n\n        return (\\n    ${propsImplementation}\\n ${\n          isRequestOptions && mutator.hasSecondArg\n            ? `options${context.output.optionsParamRequired ? '' : '?'}: SecondParameter<ReturnType<typeof ${mutator.name}>>,`\n            : ''\n        }${hasSignal ? 'signal?: AbortSignal\\n' : ''}) => {${bodyForm}\n        return ${operationName}(\n          ${mutatorConfig},\n          ${requestOptions});\n        }\n      }\n    `;\n\n      return isVue ? vueRet : ret;\n    }\n\n    return `${override.query.shouldExportHttpClient ? 'export ' : ''}const ${operationName} = (\\n    ${propsImplementation}\\n ${\n      isRequestOptions && mutator.hasSecondArg\n        ? `options${context.output.optionsParamRequired ? '' : '?'}: SecondParameter<typeof ${mutator.name}>,`\n        : ''\n    }${hasSignal ? 'signal?: AbortSignal\\n' : ''}) => {\n      ${isVue ? vueUnRefParams(props) : ''}\n      ${bodyForm}\n      return ${mutator.name}<${response.definition.success || 'unknown'}>(\n      ${mutatorConfig},\n      ${requestOptions});\n    }\n  `;\n  }\n\n  const isSyntheticDefaultImportsAllowed = isSyntheticDefaultImportsAllow(\n    context.output.tsconfig,\n  );\n\n  const options = generateOptions({\n    route,\n    body,\n    headers,\n    queryParams,\n    response,\n    verb,\n    requestOptions: override?.requestOptions,\n    isFormData,\n    isFormUrlEncoded,\n    paramsSerializer,\n    paramsSerializerOptions: override?.paramsSerializerOptions,\n    isExactOptionalPropertyTypes,\n    hasSignal,\n    isVue: isVue,\n  });\n\n  const optionsArgs = generateRequestOptionsArguments({\n    isRequestOptions,\n    hasSignal,\n  });\n\n  const queryProps = toObjectString(props, 'implementation');\n\n  const httpRequestFunctionImplementation = `${override.query.shouldExportHttpClient ? 'export ' : ''}const ${operationName} = (\\n    ${queryProps} ${optionsArgs} ): Promise<AxiosResponse<${\n    response.definition.success || 'unknown'\n  }>> => {\n    ${isVue ? vueUnRefParams(props) : ''}\n    ${bodyForm}\n    return axios${\n      isSyntheticDefaultImportsAllowed ? '' : '.default'\n    }.${verb}(${options});\n  }\n`;\n\n  return httpRequestFunctionImplementation;\n};\n\nexport const generateRequestOptionsArguments = ({\n  isRequestOptions,\n  hasSignal,\n}: {\n  isRequestOptions: boolean;\n  hasSignal: boolean;\n}) => {\n  if (isRequestOptions) {\n    return 'options?: AxiosRequestConfig\\n';\n  }\n\n  return hasSignal ? 'signal?: AbortSignal\\n' : '';\n};\n\nexport const getQueryArgumentsRequestType = (\n  httpClient: OutputHttpClient,\n  mutator?: GeneratorMutator,\n) => {\n  if (!mutator) {\n    return httpClient === OutputHttpClient.AXIOS\n      ? `axios?: AxiosRequestConfig`\n      : 'fetch?: RequestInit';\n  }\n\n  if (mutator.hasSecondArg && !mutator.isHook) {\n    return `request?: SecondParameter<typeof ${mutator.name}>`;\n  }\n\n  if (mutator.hasSecondArg && mutator.isHook) {\n    return `request?: SecondParameter<ReturnType<typeof ${mutator.name}>>`;\n  }\n\n  return '';\n};\n\nexport const getQueryOptions = ({\n  isRequestOptions,\n  mutator,\n  isExactOptionalPropertyTypes,\n  hasSignal,\n  httpClient,\n}: {\n  isRequestOptions: boolean;\n  mutator?: GeneratorMutator;\n  isExactOptionalPropertyTypes: boolean;\n  hasSignal: boolean;\n  httpClient: OutputHttpClient;\n}) => {\n  if (!mutator && isRequestOptions) {\n    const options =\n      httpClient === OutputHttpClient.AXIOS ? 'axiosOptions' : 'fetchOptions';\n\n    if (!hasSignal) {\n      return options;\n    }\n\n    return `{ ${\n      isExactOptionalPropertyTypes ? '...(signal ? { signal } : {})' : 'signal'\n    }, ...${options} }`;\n  }\n\n  if (mutator?.hasSecondArg && isRequestOptions) {\n    if (!hasSignal) {\n      return 'requestOptions';\n    }\n\n    return httpClient === OutputHttpClient.AXIOS\n      ? 'requestOptions, signal'\n      : '{ signal, ...requestOptions }';\n  }\n\n  if (hasSignal) {\n    return 'signal';\n  }\n\n  return '';\n};\n\nexport const getHookOptions = ({\n  isRequestOptions,\n  httpClient,\n  mutator,\n}: {\n  isRequestOptions: boolean;\n  httpClient: OutputHttpClient;\n  mutator?: GeneratorMutator;\n}) => {\n  if (!isRequestOptions) {\n    return '';\n  }\n\n  let value = 'const {query: queryOptions';\n\n  if (!mutator) {\n    const options =\n      httpClient === OutputHttpClient.AXIOS\n        ? ', axios: axiosOptions'\n        : ', fetch: fetchOptions';\n\n    value += options;\n  }\n\n  if (mutator?.hasSecondArg) {\n    value += ', request: requestOptions';\n  }\n\n  value += '} = options ?? {};';\n\n  return value;\n};\n\nexport const getQueryErrorType = (\n  operationName: string,\n  response: GetterResponse,\n  httpClient: OutputHttpClient,\n  mutator?: GeneratorMutator,\n) => {\n  if (mutator) {\n    return mutator.hasErrorType\n      ? `${mutator.default ? pascal(operationName) : ''}ErrorType<${\n          response.definition.errors || 'unknown'\n        }>`\n      : response.definition.errors || 'unknown';\n  } else {\n    return httpClient === OutputHttpClient.AXIOS\n      ? `AxiosError<${response.definition.errors || 'unknown'}>`\n      : response.definition.errors || 'unknown';\n  }\n};\n\nexport const getHooksOptionImplementation = (\n  isRequestOptions: boolean,\n  httpClient: OutputHttpClient,\n  operationName: string,\n  mutator?: GeneratorMutator,\n) => {\n  const options =\n    httpClient === OutputHttpClient.AXIOS\n      ? ', axios: axiosOptions'\n      : ', fetch: fetchOptions';\n\n  return isRequestOptions\n    ? `const mutationKey = ['${operationName}'];\nconst {mutation: mutationOptions${\n        mutator\n          ? mutator?.hasSecondArg\n            ? ', request: requestOptions'\n            : ''\n          : options\n      }} = options ?\n      options.mutation && 'mutationKey' in options.mutation && options.mutation.mutationKey ?\n      options\n      : {...options, mutation: {...options.mutation, mutationKey}}\n      : {mutation: { mutationKey, }${mutator?.hasSecondArg ? ', request: undefined' : ''}${mutator ? '' : httpClient === OutputHttpClient.AXIOS ? ', axios: undefined' : ', fetch: undefined'}};`\n    : '';\n};\n\nexport const getMutationRequestArgs = (\n  isRequestOptions: boolean,\n  httpClient: OutputHttpClient,\n  mutator?: GeneratorMutator,\n) => {\n  const options =\n    httpClient === OutputHttpClient.AXIOS ? 'axiosOptions' : 'fetchOptions';\n\n  return isRequestOptions\n    ? mutator\n      ? mutator?.hasSecondArg\n        ? 'requestOptions'\n        : ''\n      : options\n    : '';\n};\n\nexport const getHttpFunctionQueryProps = (\n  isVue: boolean,\n  httpClient: OutputHttpClient,\n  queryProperties: string,\n) => {\n  if (isVue && httpClient === OutputHttpClient.FETCH && queryProperties) {\n    return queryProperties\n      .split(',')\n      .map((prop) => `unref(${prop})`)\n      .join(',');\n  }\n\n  return queryProperties;\n};\n\nexport const getQueryHeader: ClientHeaderBuilder = (params) => {\n  return params.output.httpClient === OutputHttpClient.FETCH\n    ? generateFetchHeader(params)\n    : '';\n};\n","import {\n  camel,\n  ClientBuilder,\n  ClientDependenciesBuilder,\n  ClientHeaderBuilder,\n  compareVersions,\n  generateMutator,\n  generateVerbImports,\n  GeneratorDependency,\n  GeneratorMutator,\n  GeneratorOptions,\n  GeneratorVerbOptions,\n  getRouteAsArray,\n  GetterParams,\n  GetterProp,\n  GetterProps,\n  GetterPropType,\n  GetterQueryParam,\n  GetterResponse,\n  isObject,\n  jsDoc,\n  mergeDeep,\n  NormalizedOutputOptions,\n  OutputClient,\n  OutputClientFunc,\n  OutputHttpClient,\n  PackageJson,\n  pascal,\n  QueryOptions,\n  stringify,\n  toObjectString,\n  Verbs,\n} from '@orval/core';\nimport omitBy from 'lodash.omitby';\n\nimport {\n  AXIOS_DEPENDENCIES,\n  generateQueryRequestFunction,\n  getHookOptions,\n  getHooksOptionImplementation,\n  getHttpFunctionQueryProps,\n  getMutationRequestArgs,\n  getQueryArgumentsRequestType,\n  getQueryErrorType,\n  getQueryHeader,\n  getQueryOptions,\n} from './client';\nimport {\n  getHasSignal,\n  isVue,\n  normalizeQueryOptions,\n  vueUnRefParams,\n  vueWrapTypeWithMaybeRef,\n} from './utils';\n\nconst REACT_DEPENDENCIES: GeneratorDependency[] = [\n  {\n    exports: [\n      {\n        name: 'useCallback',\n        values: true,\n      },\n    ],\n    dependency: 'react',\n  },\n];\n\nconst PARAMS_SERIALIZER_DEPENDENCIES: GeneratorDependency[] = [\n  {\n    exports: [\n      {\n        name: 'qs',\n        default: true,\n        values: true,\n        syntheticDefaultImport: true,\n      },\n    ],\n    dependency: 'qs',\n  },\n];\n\nconst SVELTE_QUERY_DEPENDENCIES_V3: GeneratorDependency[] = [\n  {\n    exports: [\n      { name: 'useQuery', values: true },\n      { name: 'useInfiniteQuery', values: true },\n      { name: 'useMutation', values: true },\n      { name: 'UseQueryOptions' },\n      {\n        name: 'UseInfiniteQueryOptions',\n      },\n      { name: 'UseMutationOptions' },\n      { name: 'QueryFunction' },\n      { name: 'MutationFunction' },\n      { name: 'UseQueryStoreResult' },\n      { name: 'UseInfiniteQueryStoreResult' },\n      { name: 'QueryKey' },\n      { name: 'CreateMutationResult' },\n    ],\n    dependency: '@sveltestack/svelte-query',\n  },\n];\nconst SVELTE_QUERY_DEPENDENCIES: GeneratorDependency[] = [\n  {\n    exports: [\n      { name: 'createQuery', values: true },\n      { name: 'createInfiniteQuery', values: true },\n      { name: 'createMutation', values: true },\n      { name: 'CreateQueryOptions' },\n      {\n        name: 'CreateInfiniteQueryOptions',\n      },\n      { name: 'CreateMutationOptions' },\n      { name: 'QueryFunction' },\n      { name: 'MutationFunction' },\n      { name: 'CreateQueryResult' },\n      { name: 'CreateInfiniteQueryResult' },\n      { name: 'QueryKey' },\n      { name: 'InfiniteData' },\n      { name: 'CreateMutationResult' },\n      { name: 'DataTag' },\n      { name: 'QueryClient' },\n    ],\n    dependency: '@tanstack/svelte-query',\n  },\n];\n\nconst isSvelteQueryV3 = (packageJson: PackageJson | undefined) => {\n  const hasSvelteQuery =\n    packageJson?.dependencies?.['@sveltestack/svelte-query'] ??\n    packageJson?.devDependencies?.['@sveltestack/svelte-query'] ??\n    packageJson?.peerDependencies?.['@sveltestack/svelte-query'];\n  const hasSvelteQueryV4 =\n    packageJson?.dependencies?.['@tanstack/svelte-query'] ??\n    packageJson?.devDependencies?.['@tanstack/svelte-query'] ??\n    packageJson?.peerDependencies?.['@tanstack/svelte-query'];\n\n  return !!hasSvelteQuery && !hasSvelteQueryV4;\n};\n\nconst isSvelteQueryV6 = (packageJson: PackageJson | undefined) => {\n  return isQueryV6(packageJson, 'svelte-query');\n};\n\nexport const getSvelteQueryDependencies: ClientDependenciesBuilder = (\n  hasGlobalMutator,\n  hasParamsSerializerOptions,\n  packageJson,\n  httpClient?: OutputHttpClient,\n) => {\n  const hasSvelteQueryV3 = isSvelteQueryV3(packageJson);\n\n  return [\n    ...(!hasGlobalMutator && httpClient === OutputHttpClient.AXIOS\n      ? AXIOS_DEPENDENCIES\n      : []),\n    ...(hasParamsSerializerOptions ? PARAMS_SERIALIZER_DEPENDENCIES : []),\n    ...(hasSvelteQueryV3\n      ? SVELTE_QUERY_DEPENDENCIES_V3\n      : SVELTE_QUERY_DEPENDENCIES),\n  ];\n};\n\nconst REACT_QUERY_DEPENDENCIES_V3: GeneratorDependency[] = [\n  {\n    exports: [\n      { name: 'useQuery', values: true },\n      { name: 'useInfiniteQuery', values: true },\n      { name: 'useMutation', values: true },\n      { name: 'UseQueryOptions' },\n      { name: 'UseInfiniteQueryOptions' },\n      { name: 'UseMutationOptions' },\n      { name: 'QueryFunction' },\n      { name: 'MutationFunction' },\n      { name: 'UseQueryResult' },\n      { name: 'UseInfiniteQueryResult' },\n      { name: 'QueryKey' },\n      { name: 'QueryClient' },\n      { name: 'UseMutationResult' },\n    ],\n    dependency: 'react-query',\n  },\n];\nconst REACT_QUERY_DEPENDENCIES: GeneratorDependency[] = [\n  {\n    exports: [\n      { name: 'useQuery', values: true },\n      { name: 'useSuspenseQuery', values: true },\n      { name: 'useInfiniteQuery', values: true },\n      { name: 'useSuspenseInfiniteQuery', values: true },\n      { name: 'useMutation', values: true },\n      { name: 'UseQueryOptions' },\n      { name: 'DefinedInitialDataOptions' },\n      { name: 'UndefinedInitialDataOptions' },\n      { name: 'UseSuspenseQueryOptions' },\n      { name: 'UseInfiniteQueryOptions' },\n      { name: 'UseSuspenseInfiniteQueryOptions' },\n      { name: 'UseMutationOptions' },\n      { name: 'QueryFunction' },\n      { name: 'MutationFunction' },\n      { name: 'UseQueryResult' },\n      { name: 'DefinedUseQueryResult' },\n      { name: 'UseSuspenseQueryResult' },\n      { name: 'UseInfiniteQueryResult' },\n      { name: 'DefinedUseInfiniteQueryResult' },\n      { name: 'UseSuspenseInfiniteQueryResult' },\n      { name: 'QueryKey' },\n      { name: 'QueryClient' },\n      { name: 'InfiniteData' },\n      { name: 'UseMutationResult' },\n      { name: 'DataTag' },\n    ],\n    dependency: '@tanstack/react-query',\n  },\n];\n\nexport const getReactQueryDependencies: ClientDependenciesBuilder = (\n  hasGlobalMutator,\n  hasParamsSerializerOptions,\n  packageJson,\n  httpClient,\n  hasTagsMutator,\n  override,\n) => {\n  const hasReactQuery =\n    packageJson?.dependencies?.['react-query'] ??\n    packageJson?.devDependencies?.['react-query'] ??\n    packageJson?.peerDependencies?.['react-query'];\n  const hasReactQueryV4 =\n    packageJson?.dependencies?.['@tanstack/react-query'] ??\n    packageJson?.devDependencies?.['@tanstack/react-query'] ??\n    packageJson?.peerDependencies?.['@tanstack/react-query'];\n\n  const useReactQueryV3 =\n    override?.query.version === undefined\n      ? hasReactQuery && !hasReactQueryV4\n      : override?.query.version <= 3;\n\n  return [\n    ...(hasGlobalMutator || hasTagsMutator ? REACT_DEPENDENCIES : []),\n    ...(!hasGlobalMutator && httpClient === OutputHttpClient.AXIOS\n      ? AXIOS_DEPENDENCIES\n      : []),\n    ...(hasParamsSerializerOptions ? PARAMS_SERIALIZER_DEPENDENCIES : []),\n    ...(useReactQueryV3\n      ? REACT_QUERY_DEPENDENCIES_V3\n      : REACT_QUERY_DEPENDENCIES),\n  ];\n};\n\nconst VUE_QUERY_DEPENDENCIES_V3: GeneratorDependency[] = [\n  {\n    exports: [\n      { name: 'useQuery', values: true },\n      { name: 'useInfiniteQuery', values: true },\n      { name: 'useMutation', values: true },\n    ],\n    dependency: 'vue-query',\n  },\n  {\n    exports: [\n      { name: 'UseQueryOptions' },\n      { name: 'UseInfiniteQueryOptions' },\n      { name: 'UseMutationOptions' },\n      { name: 'QueryFunction' },\n      { name: 'MutationFunction' },\n      { name: 'UseQueryResult' },\n      { name: 'UseInfiniteQueryResult' },\n      { name: 'QueryKey' },\n      { name: 'UseMutationReturnType' },\n    ],\n    dependency: 'vue-query/types',\n  },\n  {\n    exports: [\n      { name: 'unref', values: true },\n      { name: 'computed', values: true },\n    ],\n    dependency: 'vue',\n  },\n  {\n    exports: [{ name: 'UseQueryReturnType' }],\n    dependency: 'vue-query/lib/vue/useBaseQuery',\n  },\n];\n\nconst VUE_QUERY_DEPENDENCIES: GeneratorDependency[] = [\n  {\n    exports: [\n      { name: 'useQuery', values: true },\n      { name: 'useInfiniteQuery', values: true },\n      { name: 'useMutation', values: true },\n      { name: 'UseQueryOptions' },\n      { name: 'UseInfiniteQueryOptions' },\n      { name: 'UseMutationOptions' },\n      { name: 'QueryFunction' },\n      { name: 'MutationFunction' },\n      { name: 'QueryKey' },\n      { name: 'UseQueryReturnType' },\n      { name: 'UseInfiniteQueryReturnType' },\n      { name: 'InfiniteData' },\n      { name: 'UseMutationReturnType' },\n      { name: 'DataTag' },\n      { name: 'QueryClient' },\n    ],\n    dependency: '@tanstack/vue-query',\n  },\n  {\n    exports: [\n      { name: 'unref', values: true },\n      { name: 'MaybeRef' },\n      { name: 'computed', values: true },\n    ],\n    dependency: 'vue',\n  },\n];\n\nconst isVueQueryV3 = (packageJson: PackageJson | undefined) => {\n  const hasVueQuery =\n    packageJson?.dependencies?.['vue-query'] ??\n    packageJson?.devDependencies?.['vue-query'] ??\n    packageJson?.peerDependencies?.['vue-query'];\n  const hasVueQueryV4 =\n    packageJson?.dependencies?.['@tanstack/vue-query'] ??\n    packageJson?.devDependencies?.['@tanstack/vue-query'] ??\n    packageJson?.peerDependencies?.['@tanstack/vue-query'];\n\n  return !!hasVueQuery && !hasVueQueryV4;\n};\n\nexport const getVueQueryDependencies: ClientDependenciesBuilder = (\n  hasGlobalMutator: boolean,\n  hasParamsSerializerOptions: boolean,\n  packageJson,\n  httpClient?: OutputHttpClient,\n) => {\n  const hasVueQueryV3 = isVueQueryV3(packageJson);\n\n  return [\n    ...(!hasGlobalMutator && httpClient === OutputHttpClient.AXIOS\n      ? AXIOS_DEPENDENCIES\n      : []),\n    ...(hasParamsSerializerOptions ? PARAMS_SERIALIZER_DEPENDENCIES : []),\n    ...(hasVueQueryV3 ? VUE_QUERY_DEPENDENCIES_V3 : VUE_QUERY_DEPENDENCIES),\n  ];\n};\n\nconst isQueryV5 = (\n  packageJson: PackageJson | undefined,\n  queryClient: 'react-query' | 'vue-query' | 'svelte-query',\n) => {\n  const version = getPackageByQueryClient(packageJson, queryClient);\n\n  if (!version) {\n    return false;\n  }\n\n  const withoutRc = version.split('-')[0];\n\n  return compareVersions(withoutRc, '5.0.0');\n};\n\nconst isQueryV6 = (\n  packageJson: PackageJson | undefined,\n  queryClient: 'react-query' | 'vue-query' | 'svelte-query',\n) => {\n  const version = getPackageByQueryClient(packageJson, queryClient);\n\n  if (!version) {\n    return false;\n  }\n\n  const withoutRc = version.split('-')[0];\n\n  return compareVersions(withoutRc, '6.0.0');\n};\n\nconst isQueryV5WithDataTagError = (\n  packageJson: PackageJson | undefined,\n  queryClient: 'react-query' | 'vue-query' | 'svelte-query',\n) => {\n  const version = getPackageByQueryClient(packageJson, queryClient);\n\n  if (!version) {\n    return false;\n  }\n\n  const withoutRc = version.split('-')[0];\n\n  return compareVersions(withoutRc, '5.62.0');\n};\n\nconst isQueryV5WithInfiniteQueryOptionsError = (\n  packageJson: PackageJson | undefined,\n  queryClient: 'react-query' | 'vue-query' | 'svelte-query',\n) => {\n  const version = getPackageByQueryClient(packageJson, queryClient);\n\n  if (!version) {\n    return false;\n  }\n\n  const withoutRc = version.split('-')[0];\n\n  return compareVersions(withoutRc, '5.80.0');\n};\n\nconst getPackageByQueryClient = (\n  packageJson: PackageJson | undefined,\n  queryClient: 'react-query' | 'vue-query' | 'svelte-query',\n) => {\n  switch (queryClient) {\n    case 'react-query': {\n      return (\n        packageJson?.dependencies?.['@tanstack/react-query'] ??\n        packageJson?.devDependencies?.['@tanstack/react-query'] ??\n        packageJson?.peerDependencies?.['@tanstack/react-query']\n      );\n    }\n    case 'svelte-query': {\n      return (\n        packageJson?.dependencies?.['@tanstack/svelte-query'] ??\n        packageJson?.devDependencies?.['@tanstack/svelte-query'] ??\n        packageJson?.peerDependencies?.['@tanstack/svelte-query']\n      );\n    }\n    case 'vue-query': {\n      return (\n        packageJson?.dependencies?.['@tanstack/vue-query'] ??\n        packageJson?.devDependencies?.['@tanstack/vue-query'] ??\n        packageJson?.peerDependencies?.['@tanstack/vue-query']\n      );\n    }\n  }\n};\n\ntype QueryType = 'infiniteQuery' | 'query';\n\nconst QueryType = {\n  INFINITE: 'infiniteQuery' as QueryType,\n  QUERY: 'query' as QueryType,\n  SUSPENSE_QUERY: 'suspenseQuery' as QueryType,\n  SUSPENSE_INFINITE: 'suspenseInfiniteQuery' as QueryType,\n};\n\nconst INFINITE_QUERY_PROPERTIES = new Set([\n  'getNextPageParam',\n  'getPreviousPageParam',\n]);\n\nconst generateQueryOptions = ({\n  params,\n  options,\n  type,\n  outputClient,\n}: {\n  params: GetterParams;\n  options?: object | boolean;\n  type: QueryType;\n  outputClient: OutputClient | OutputClientFunc;\n}) => {\n  if (options === false) {\n    return '';\n  }\n\n  const queryConfig = isObject(options)\n    ? ` ${stringify(\n        omitBy(\n          options,\n          (_, key) =>\n            (type !== QueryType.INFINITE ||\n              type !== QueryType.SUSPENSE_INFINITE) &&\n            INFINITE_QUERY_PROPERTIES.has(key),\n        ),\n      )?.slice(1, -1)}`\n    : '';\n\n  if (params.length === 0 || isSuspenseQuery(type)) {\n    if (options) {\n      return `${queryConfig} ...queryOptions`;\n    }\n\n    return '...queryOptions';\n  }\n\n  return `${\n    !isObject(options) || !options.hasOwnProperty('enabled')\n      ? isVue(outputClient)\n        ? `enabled: computed(() => !!(${params\n            .map(({ name }) => `unref(${name})`)\n            .join(' && ')})),`\n        : `enabled: !!(${params.map(({ name }) => name).join(' && ')}),`\n      : ''\n  }${queryConfig} ...queryOptions`;\n};\n\nconst isSuspenseQuery = (type: QueryType) => {\n  return [QueryType.SUSPENSE_INFINITE, QueryType.SUSPENSE_QUERY].includes(type);\n};\n\nconst getQueryOptionsDefinition = ({\n  operationName,\n  mutator,\n  definitions,\n  type,\n  hasSvelteQueryV4,\n  hasQueryV5,\n  hasQueryV5WithInfiniteQueryOptionsError,\n  queryParams,\n  queryParam,\n  isReturnType,\n  initialData,\n}: {\n  operationName: string;\n  mutator?: GeneratorMutator;\n  definitions: string;\n  type?: QueryType;\n  hasSvelteQueryV4: boolean;\n  hasQueryV5: boolean;\n  hasQueryV5WithInfiniteQueryOptionsError: boolean;\n  queryParams?: GetterQueryParam;\n  queryParam?: string;\n  isReturnType: boolean;\n  initialData?: 'defined' | 'undefined';\n}) => {\n  const isMutatorHook = mutator?.isHook;\n  const prefix = hasSvelteQueryV4 ? 'Create' : 'Use';\n  const partialOptions = !isReturnType && hasQueryV5;\n\n  if (type) {\n    const funcReturnType = `Awaited<ReturnType<${\n      isMutatorHook\n        ? `ReturnType<typeof use${pascal(operationName)}Hook>`\n        : `typeof ${operationName}`\n    }>>`;\n\n    const optionTypeInitialDataPostfix =\n      initialData && !isSuspenseQuery(type)\n        ? ` & Pick<\n        ${pascal(initialData)}InitialDataOptions<\n          ${funcReturnType},\n          TError,\n          ${funcReturnType}${\n            hasQueryV5 &&\n            (type === QueryType.INFINITE ||\n              type === QueryType.SUSPENSE_INFINITE) &&\n            queryParam &&\n            queryParams\n              ? `, QueryKey`\n              : ''\n          }\n        > , 'initialData'\n      >`\n        : '';\n    const optionType = `${prefix}${pascal(type)}Options<${funcReturnType}, TError, TData${\n      hasQueryV5 &&\n      (type === QueryType.INFINITE || type === QueryType.SUSPENSE_INFINITE) &&\n      queryParam &&\n      queryParams\n        ? hasQueryV5WithInfiniteQueryOptionsError\n          ? `, QueryKey, ${queryParams?.schema.name}['${queryParam}']`\n          : `, ${funcReturnType}, QueryKey, ${queryParams?.schema.name}['${queryParam}']`\n        : ''\n    }>`;\n    return `${partialOptions ? 'Partial<' : ''}${optionType}${\n      partialOptions ? '>' : ''\n    }${optionTypeInitialDataPostfix}`;\n  }\n\n  return `${prefix}MutationOptions<Awaited<ReturnType<${\n    isMutatorHook\n      ? `ReturnType<typeof use${pascal(operationName)}Hook>`\n      : `typeof ${operationName}`\n  }>>, TError,${definitions ? `{${definitions}}` : 'void'}, TContext>`;\n};\n\nconst generateQueryArguments = ({\n  operationName,\n  definitions,\n  mutator,\n  isRequestOptions,\n  type,\n  hasSvelteQueryV4,\n  hasQueryV5,\n  hasQueryV5WithInfiniteQueryOptionsError,\n  queryParams,\n  queryParam,\n  initialData,\n  httpClient,\n}: {\n  operationName: string;\n  definitions: string;\n  mutator?: GeneratorMutator;\n  isRequestOptions: boolean;\n  type?: QueryType;\n  hasSvelteQueryV4: boolean;\n  hasQueryV5: boolean;\n  hasQueryV5WithInfiniteQueryOptionsError: boolean;\n  queryParams?: GetterQueryParam;\n  queryParam?: string;\n  initialData?: 'defined' | 'undefined';\n  httpClient: OutputHttpClient;\n}) => {\n  const definition = getQueryOptionsDefinition({\n    operationName,\n    mutator,\n    definitions,\n    type,\n    hasSvelteQueryV4,\n    hasQueryV5,\n    hasQueryV5WithInfiniteQueryOptionsError,\n    queryParams,\n    queryParam,\n    isReturnType: false,\n    initialData,\n  });\n\n  if (!isRequestOptions) {\n    return `${type ? 'queryOptions' : 'mutationOptions'}${\n      initialData === 'defined' ? '' : '?'\n    }: ${definition}`;\n  }\n\n  const requestType = getQueryArgumentsRequestType(httpClient, mutator);\n\n  const isQueryRequired = initialData === 'defined';\n  return `options${isQueryRequired ? '' : '?'}: { ${\n    type ? 'query' : 'mutation'\n  }${isQueryRequired ? '' : '?'}:${definition}, ${requestType}}\\n`;\n};\n\nconst generateQueryReturnType = ({\n  outputClient,\n  type,\n  isMutatorHook,\n  operationName,\n  hasVueQueryV4,\n  hasSvelteQueryV4,\n  hasQueryV5,\n  hasQueryV5WithDataTagError,\n  isInitialDataDefined,\n}: {\n  outputClient: OutputClient | OutputClientFunc;\n  type: QueryType;\n  isMutatorHook?: boolean;\n  operationName: string;\n  hasVueQueryV4: boolean;\n  hasSvelteQueryV4: boolean;\n  hasQueryV5: boolean;\n  hasQueryV5WithDataTagError: boolean;\n  isInitialDataDefined?: boolean;\n}) => {\n  switch (outputClient) {\n    case OutputClient.SVELTE_QUERY: {\n      if (!hasSvelteQueryV4) {\n        return `Use${pascal(type)}StoreResult<Awaited<ReturnType<${\n          isMutatorHook\n            ? `ReturnType<typeof use${pascal(operationName)}Hook>`\n            : `typeof ${operationName}`\n        }>>, TError, TData, QueryKey> & { queryKey: QueryKey} }`;\n      }\n\n      return `Create${pascal(\n        type,\n      )}Result<TData, TError> & { queryKey: ${hasQueryV5 ? `DataTag<QueryKey, TData${hasQueryV5WithDataTagError ? ', TError' : ''}>` : 'QueryKey'} }`;\n    }\n    case OutputClient.VUE_QUERY: {\n      if (!hasVueQueryV4) {\n        return ` UseQueryReturnType<TData, TError, Use${pascal(\n          type,\n        )}Result<TData, TError>> & { queryKey: QueryKey} }`;\n      }\n\n      if (type !== QueryType.INFINITE && type !== QueryType.SUSPENSE_INFINITE) {\n        return `UseQueryReturnType<TData, TError> & { queryKey: ${hasQueryV5 ? `DataTag<QueryKey, TData${hasQueryV5WithDataTagError ? ', TError' : ''}>` : 'QueryKey'} }`;\n      }\n\n      return `UseInfiniteQueryReturnType<TData, TError> & { queryKey: ${hasQueryV5 ? `DataTag<QueryKey, TData${hasQueryV5WithDataTagError ? ', TError' : ''}>` : 'QueryKey'} }`;\n    }\n    case OutputClient.REACT_QUERY:\n    default: {\n      return ` ${\n        isInitialDataDefined && !isSuspenseQuery(type) ? 'Defined' : ''\n      }Use${pascal(type)}Result<TData, TError> & { queryKey: ${hasQueryV5 ? `DataTag<QueryKey, TData${hasQueryV5WithDataTagError ? ', TError' : ''}>` : 'QueryKey'} }`;\n    }\n  }\n};\n\nconst generateMutatorReturnType = ({\n  outputClient,\n  dataType,\n  variableType,\n}: {\n  outputClient: OutputClient | OutputClientFunc;\n  dataType: unknown;\n  variableType: unknown;\n}) => {\n  if (outputClient === OutputClient.REACT_QUERY) {\n    return `: UseMutationResult<\n        Awaited<ReturnType<${dataType}>>,\n        TError,\n        ${variableType},\n        TContext\n      >`;\n  }\n  if (outputClient === OutputClient.SVELTE_QUERY) {\n    return `: CreateMutationResult<\n        Awaited<ReturnType<${dataType}>>,\n        TError,\n        ${variableType},\n        TContext\n      >`;\n  }\n  if (outputClient === OutputClient.VUE_QUERY) {\n    return `: UseMutationReturnType<\n        Awaited<ReturnType<${dataType}>>,\n        TError,\n        ${variableType},\n        TContext\n      >`;\n  }\n  return '';\n};\n\nconst getQueryFnArguments = ({\n  hasQueryParam,\n  hasSignal,\n}: {\n  hasQueryParam: boolean;\n  hasSignal: boolean;\n}) => {\n  if (!hasQueryParam && !hasSignal) {\n    return '';\n  }\n\n  if (hasQueryParam) {\n    if (hasSignal) {\n      return '{ signal, pageParam }';\n    }\n\n    return '{ pageParam }';\n  }\n\n  return '{ signal }';\n};\n\nconst generateQueryImplementation = ({\n  queryOption: { name, queryParam, options, type, queryKeyFnName },\n  operationName,\n  queryProperties,\n  queryKeyProperties,\n  queryParams,\n  params,\n  props,\n  mutator,\n  queryOptionsMutator,\n  queryKeyMutator,\n  isRequestOptions,\n  response,\n  outputClient,\n  httpClient,\n  isExactOptionalPropertyTypes,\n  hasSignal,\n  route,\n  hasVueQueryV4,\n  hasSvelteQueryV4,\n  hasSvelteQueryV6,\n  hasQueryV5,\n  hasQueryV5WithDataTagError,\n  hasQueryV5WithInfiniteQueryOptionsError,\n  doc,\n  usePrefetch,\n  useQuery,\n  useInfinite,\n}: {\n  queryOption: {\n    name: string;\n    options?: object | boolean;\n    type: QueryType;\n    queryParam?: string;\n    queryKeyFnName: string;\n  };\n  isRequestOptions: boolean;\n  operationName: string;\n  queryProperties: string;\n  queryKeyProperties: string;\n  params: GetterParams;\n  props: GetterProps;\n  response: GetterResponse;\n  queryParams?: GetterQueryParam;\n  mutator?: GeneratorMutator;\n  queryOptionsMutator?: GeneratorMutator;\n  queryKeyMutator?: GeneratorMutator;\n  outputClient: OutputClient | OutputClientFunc;\n  httpClient: OutputHttpClient;\n  isExactOptionalPropertyTypes: boolean;\n  hasSignal: boolean;\n  route: string;\n  hasVueQueryV4: boolean;\n  hasSvelteQueryV4: boolean;\n  hasSvelteQueryV6: boolean;\n  hasQueryV5: boolean;\n  hasQueryV5WithDataTagError: boolean;\n  hasQueryV5WithInfiniteQueryOptionsError: boolean;\n  doc?: string;\n  usePrefetch?: boolean;\n  useQuery?: boolean;\n  useInfinite?: boolean;\n}) => {\n  const queryPropDefinitions = toObjectString(props, 'definition');\n  const definedInitialDataQueryPropsDefinitions = toObjectString(\n    props.map((prop) => {\n      const regex = new RegExp(`^${prop.name}\\\\s*\\\\?:`);\n\n      if (!regex.test(prop.definition)) {\n        return prop;\n      }\n\n      const definitionWithUndefined = prop.definition.replace(\n        regex,\n        `${prop.name}: undefined | `,\n      );\n      return {\n        ...prop,\n        definition: definitionWithUndefined,\n      };\n    }),\n    'definition',\n  );\n  const queryProps = toObjectString(props, 'implementation');\n\n  const hasInfiniteQueryParam = queryParam && queryParams?.schema.name;\n\n  const httpFunctionProps = queryParam\n    ? props\n        .map((param) => {\n          if (\n            param.type === GetterPropType.NAMED_PATH_PARAMS &&\n            !isVue(outputClient)\n          )\n            return param.destructured;\n          return param.name === 'params'\n            ? `{...${\n                isVue(outputClient) ? `unref(params)` : 'params'\n              }, '${queryParam}': pageParam || ${\n                isVue(outputClient)\n                  ? `unref(params)?.['${queryParam}']`\n                  : `params?.['${queryParam}']`\n              }}`\n            : param.name;\n        })\n        .join(',')\n    : getHttpFunctionQueryProps(\n        isVue(outputClient),\n        httpClient,\n        queryProperties,\n      );\n\n  const definedInitialDataReturnType = generateQueryReturnType({\n    outputClient,\n    type,\n    isMutatorHook: mutator?.isHook,\n    operationName,\n    hasVueQueryV4,\n    hasSvelteQueryV4,\n    hasQueryV5,\n    hasQueryV5WithDataTagError,\n    isInitialDataDefined: true,\n  });\n  const returnType = generateQueryReturnType({\n    outputClient,\n    type,\n    isMutatorHook: mutator?.isHook,\n    operationName,\n    hasVueQueryV4,\n    hasSvelteQueryV4,\n    hasQueryV5,\n    hasQueryV5WithDataTagError,\n  });\n\n  const errorType = getQueryErrorType(\n    operationName,\n    response,\n    httpClient,\n    mutator,\n  );\n\n  const dataType = mutator?.isHook\n    ? `ReturnType<typeof use${pascal(operationName)}Hook>`\n    : `typeof ${operationName}`;\n\n  const definedInitialDataQueryArguments = generateQueryArguments({\n    operationName,\n    mutator,\n    definitions: '',\n    isRequestOptions,\n    type,\n    hasSvelteQueryV4,\n    hasQueryV5,\n    hasQueryV5WithInfiniteQueryOptionsError,\n    queryParams,\n    queryParam,\n    initialData: 'defined',\n    httpClient,\n  });\n  const undefinedInitialDataQueryArguments = generateQueryArguments({\n    operationName,\n    definitions: '',\n    mutator,\n    isRequestOptions,\n    type,\n    hasSvelteQueryV4,\n    hasQueryV5,\n    hasQueryV5WithInfiniteQueryOptionsError,\n    queryParams,\n    queryParam,\n    initialData: 'undefined',\n    httpClient,\n  });\n  const queryArguments = generateQueryArguments({\n    operationName,\n    definitions: '',\n    mutator,\n    isRequestOptions,\n    type,\n    hasSvelteQueryV4,\n    hasQueryV5,\n    hasQueryV5WithInfiniteQueryOptionsError,\n    queryParams,\n    queryParam,\n    httpClient,\n  });\n\n  const queryOptions = getQueryOptions({\n    isRequestOptions,\n    isExactOptionalPropertyTypes,\n    mutator,\n    hasSignal,\n    httpClient,\n  });\n\n  const hookOptions = getHookOptions({\n    isRequestOptions,\n    httpClient,\n    mutator,\n  });\n\n  const queryFnArguments = getQueryFnArguments({\n    hasQueryParam:\n      !!queryParam && props.some(({ type }) => type === 'queryParam'),\n    hasSignal,\n  });\n\n  const queryOptionFnReturnType = getQueryOptionsDefinition({\n    operationName,\n    mutator,\n    definitions: '',\n    type,\n    hasSvelteQueryV4,\n    hasQueryV5,\n    hasQueryV5WithInfiniteQueryOptionsError,\n    queryParams,\n    queryParam,\n    isReturnType: true,\n  });\n\n  const queryOptionsImp = generateQueryOptions({\n    params,\n    options,\n    type,\n    outputClient,\n  });\n\n  const queryOptionsFnName = camel(\n    queryKeyMutator || queryOptionsMutator || mutator?.isHook\n      ? `use-${name}-queryOptions`\n      : `get-${name}-queryOptions`,\n  );\n\n  const queryOptionsVarName = isRequestOptions ? 'queryOptions' : 'options';\n\n  const hasParamReservedWord = props.some(\n    (prop: GetterProp) => prop.name === 'query',\n  );\n  const queryResultVarName = hasParamReservedWord ? '_query' : 'query';\n\n  const infiniteParam =\n    queryParams && queryParam\n      ? `, ${queryParams?.schema.name}['${queryParam}']`\n      : '';\n  const TData =\n    hasQueryV5 &&\n    (type === QueryType.INFINITE || type === QueryType.SUSPENSE_INFINITE)\n      ? `InfiniteData<Awaited<ReturnType<${dataType}>>${infiniteParam}>`\n      : `Awaited<ReturnType<${dataType}>>`;\n\n  const queryOptionsFn = `export const ${queryOptionsFnName} = <TData = ${TData}, TError = ${errorType}>(${queryProps} ${queryArguments}) => {\n\n${hookOptions}\n\n  const queryKey =  ${\n    queryKeyMutator\n      ? `${queryKeyMutator.name}({ ${queryProperties} }${\n          queryKeyMutator.hasSecondArg\n            ? `, { url: \\`${route}\\`, queryOptions }`\n            : ''\n        });`\n      : `${\n          hasVueQueryV4 ? '' : 'queryOptions?.queryKey ?? '\n        }${queryKeyFnName}(${queryKeyProperties});`\n  }\n\n  ${\n    mutator?.isHook\n      ? `const ${operationName} =  use${pascal(operationName)}Hook();`\n      : ''\n  }\n\n    const queryFn: QueryFunction<Awaited<ReturnType<${\n      mutator?.isHook\n        ? `ReturnType<typeof use${pascal(operationName)}Hook>`\n        : `typeof ${operationName}`\n    }>>${\n      hasQueryV5 && hasInfiniteQueryParam\n        ? `, QueryKey, ${queryParams?.schema.name}['${queryParam}']`\n        : ''\n    }> = (${queryFnArguments}) => ${operationName}(${httpFunctionProps}${\n      httpFunctionProps ? ', ' : ''\n    }${queryOptions});\n\n      ${\n        isVue(outputClient)\n          ? vueUnRefParams(\n              props.filter(\n                (prop) => prop.type === GetterPropType.NAMED_PATH_PARAMS,\n              ),\n            )\n          : ''\n      }\n\n      ${\n        queryOptionsMutator\n          ? `const customOptions = ${\n              queryOptionsMutator.name\n            }({...queryOptions, queryKey, queryFn}${\n              queryOptionsMutator.hasSecondArg ? `, { ${queryProperties} }` : ''\n            }${\n              queryOptionsMutator.hasThirdArg ? `, { url: \\`${route}\\` }` : ''\n            });`\n          : ''\n      }\n\n   return  ${\n     queryOptionsMutator\n       ? 'customOptions'\n       : `{ queryKey, queryFn, ${queryOptionsImp}}`\n   } as ${queryOptionFnReturnType} ${\n     isVue(outputClient)\n       ? ''\n       : `& { queryKey: ${hasQueryV5 ? `DataTag<QueryKey, TData${hasQueryV5WithDataTagError ? ', TError' : ''}>` : 'QueryKey'} }`\n   }\n}`;\n\n  const operationPrefix = hasSvelteQueryV4 ? 'create' : 'use';\n  const optionalQueryClientArgument = hasQueryV5\n    ? ', queryClient?: QueryClient'\n    : '';\n\n  const queryHookName = camel(`${operationPrefix}-${name}`);\n\n  const overrideTypes = `\nexport function ${queryHookName}<TData = ${TData}, TError = ${errorType}>(\\n ${definedInitialDataQueryPropsDefinitions} ${definedInitialDataQueryArguments} ${optionalQueryClientArgument}\\n  ): ${definedInitialDataReturnType}\nexport function ${queryHookName}<TData = ${TData}, TError = ${errorType}>(\\n ${queryPropDefinitions} ${undefinedInitialDataQueryArguments} ${optionalQueryClientArgument}\\n  ): ${returnType}\nexport function ${queryHookName}<TData = ${TData}, TError = ${errorType}>(\\n ${queryPropDefinitions} ${queryArguments} ${optionalQueryClientArgument}\\n  ): ${returnType}`;\n\n  const shouldGeneratePrefetch =\n    usePrefetch &&\n    (type === QueryType.QUERY ||\n      type === QueryType.INFINITE ||\n      (type === QueryType.SUSPENSE_QUERY && !useQuery) ||\n      (type === QueryType.SUSPENSE_INFINITE && !useInfinite));\n  const prefetchType =\n    type === QueryType.QUERY || type === QueryType.SUSPENSE_QUERY\n      ? 'query'\n      : 'infinite-query';\n  const prefetchVarName = camel(`prefetch-${operationName}-${prefetchType}`);\n  const prefetchFnName = camel(`prefetch-${prefetchType}`);\n\n  return `\n${queryOptionsFn}\n\nexport type ${pascal(\n    name,\n  )}QueryResult = NonNullable<Awaited<ReturnType<${dataType}>>>\nexport type ${pascal(name)}QueryError = ${errorType}\n\n${hasQueryV5 && OutputClient.REACT_QUERY === outputClient ? overrideTypes : ''}\n${doc}\nexport function ${queryHookName}<TData = ${TData}, TError = ${errorType}>(\\n ${queryProps} ${queryArguments} ${optionalQueryClientArgument} \\n ): ${returnType} {\n\n  const ${queryOptionsVarName} = ${queryOptionsFnName}(${queryProperties}${\n    queryProperties ? ',' : ''\n  }${isRequestOptions ? 'options' : 'queryOptions'})\n\n  const ${queryResultVarName} = ${camel(`${operationPrefix}-${type}`)}(${\n    hasSvelteQueryV6\n      ? `() => ({ ...${queryOptionsVarName}${optionalQueryClientArgument ? ', queryClient' : ''} })`\n      : `${queryOptionsVarName}${optionalQueryClientArgument ? ', queryClient' : ''}`\n  }) as ${returnType};\n\n  ${queryResultVarName}.queryKey = ${\n    isVue(outputClient) ? `unref(${queryOptionsVarName})` : queryOptionsVarName\n  }.queryKey ${isVue(outputClient) ? `as ${hasQueryV5 ? `DataTag<QueryKey, TData${hasQueryV5WithDataTagError ? ', TError' : ''}>` : 'QueryKey'}` : ''};\n\n  return ${queryResultVarName};\n}\\n\n${\n  shouldGeneratePrefetch\n    ? `${doc}export const ${prefetchVarName} = async <TData = Awaited<ReturnType<${dataType}>>, TError = ${errorType}>(\\n queryClient: QueryClient, ${queryProps} ${queryArguments}\\n  ): Promise<QueryClient> => {\n\n  const ${queryOptionsVarName} = ${queryOptionsFnName}(${queryProperties}${\n    queryProperties ? ',' : ''\n  }${isRequestOptions ? 'options' : 'queryOptions'})\n\n  await queryClient.${prefetchFnName}(${\n    hasSvelteQueryV6\n      ? `() => ({ ...${queryOptionsVarName} })`\n      : queryOptionsVarName\n  });\n\n  return queryClient;\n}\\n`\n    : ''\n}\n`;\n};\n\nconst generateQueryHook = async (\n  {\n    queryParams,\n    operationName,\n    body,\n    props: _props,\n    verb,\n    params,\n    override,\n    mutator,\n    response,\n    operationId,\n    summary,\n    deprecated,\n  }: GeneratorVerbOptions,\n  { route, override: { operations = {} }, context, output }: GeneratorOptions,\n  outputClient: OutputClient | OutputClientFunc,\n) => {\n  let props = _props;\n  if (isVue(outputClient)) {\n    props = vueWrapTypeWithMaybeRef(_props);\n  }\n  const query = override?.query;\n  const isRequestOptions = override?.requestOptions !== false;\n  const operationQueryOptions = operations[operationId]?.query;\n  const isExactOptionalPropertyTypes =\n    !!context.output.tsconfig?.compilerOptions?.exactOptionalPropertyTypes;\n  const queryVersion = override.query.version ?? query?.version;\n\n  const hasVueQueryV4 =\n    OutputClient.VUE_QUERY === outputClient &&\n    (!isVueQueryV3(context.output.packageJson) || queryVersion === 4);\n  const hasSvelteQueryV4 =\n    OutputClient.SVELTE_QUERY === outputClient &&\n    (!isSvelteQueryV3(context.output.packageJson) || queryVersion === 4);\n  const hasSvelteQueryV6 =\n    OutputClient.SVELTE_QUERY === outputClient &&\n    isSvelteQueryV6(context.output.packageJson);\n\n  const hasQueryV5 =\n    queryVersion === 5 ||\n    isQueryV5(\n      context.output.packageJson,\n      outputClient as 'react-query' | 'vue-query' | 'svelte-query',\n    );\n\n  const hasQueryV5WithDataTagError =\n    queryVersion === 5 ||\n    isQueryV5WithDataTagError(\n      context.output.packageJson,\n      outputClient as 'react-query' | 'vue-query' | 'svelte-query',\n    );\n\n  const hasQueryV5WithInfiniteQueryOptionsError =\n    queryVersion === 5 ||\n    isQueryV5WithInfiniteQueryOptionsError(\n      context.output.packageJson,\n      outputClient as 'react-query' | 'vue-query' | 'svelte-query',\n    );\n\n  const httpClient = context.output.httpClient;\n  const doc = jsDoc({ summary, deprecated });\n\n  let implementation = '';\n  let mutators;\n\n  // Allows operationQueryOptions (which is the Orval config override for the operationId)\n  // to override non-GET verbs\n  const hasOperationQueryOption = !!(\n    operationQueryOptions &&\n    (operationQueryOptions.useQuery ||\n      operationQueryOptions.useSuspenseQuery ||\n      operationQueryOptions.useInfinite ||\n      operationQueryOptions.useSuspenseInfiniteQuery)\n  );\n\n  let isQuery =\n    (Verbs.GET === verb &&\n      (override.query.useQuery ||\n        override.query.useSuspenseQuery ||\n        override.query.useInfinite ||\n        override.query.useSuspenseInfiniteQuery)) ||\n    hasOperationQueryOption;\n\n  let isMutation = override.query.useMutation && verb !== Verbs.GET;\n\n  if (operationQueryOptions?.useMutation !== undefined) {\n    isMutation = operationQueryOptions.useMutation;\n  }\n\n  // If both query and mutation are true for a non-GET operation, prioritize query\n  if (verb !== Verbs.GET && isQuery) {\n    isMutation = false;\n  }\n\n  // If both query and mutation are true for a GET operation, prioritize mutation\n  if (verb === Verbs.GET && isMutation) {\n    isQuery = false;\n  }\n\n  if (isQuery) {\n    const queryKeyMutator = query.queryKey\n      ? await generateMutator({\n          output,\n          mutator: query.queryKey,\n          name: `${operationName}QueryKey`,\n          workspace: context.workspace,\n          tsconfig: context.output.tsconfig,\n        })\n      : undefined;\n\n    const queryOptionsMutator = query.queryOptions\n      ? await generateMutator({\n          output,\n          mutator: query.queryOptions,\n          name: `${operationName}QueryOptions`,\n          workspace: context.workspace,\n          tsconfig: context.output.tsconfig,\n        })\n      : undefined;\n\n    const queryProperties = props\n      .map((param) => {\n        if (\n          param.type === GetterPropType.NAMED_PATH_PARAMS &&\n          !isVue(outputClient)\n        )\n          return param.destructured;\n        return param.type === GetterPropType.BODY\n          ? body.implementation\n          : param.name;\n      })\n      .join(',');\n\n    const queryKeyProperties = props\n      .filter((prop) => prop.type !== GetterPropType.HEADER)\n      .map((param) => {\n        if (\n          param.type === GetterPropType.NAMED_PATH_PARAMS &&\n          !isVue(outputClient)\n        )\n          return param.destructured;\n        return param.type === GetterPropType.BODY\n          ? body.implementation\n          : param.name;\n      })\n      .join(',');\n\n    const queries = [\n      ...(query?.useInfinite || operationQueryOptions?.useInfinite\n        ? [\n            {\n              name: camel(`${operationName}-infinite`),\n              options: query?.options,\n              type: QueryType.INFINITE,\n              queryParam: query?.useInfiniteQueryParam,\n              queryKeyFnName: camel(`get-${operationName}-infinite-query-key`),\n            },\n          ]\n        : []),\n      ...(query?.useQuery || operationQueryOptions?.useQuery\n        ? [\n            {\n              name: operationName,\n              options: query?.options,\n              type: QueryType.QUERY,\n              queryKeyFnName: camel(`get-${operationName}-query-key`),\n            },\n          ]\n        : []),\n      ...(query?.useSuspenseQuery || operationQueryOptions?.useSuspenseQuery\n        ? [\n            {\n              name: camel(`${operationName}-suspense`),\n              options: query?.options,\n              type: QueryType.SUSPENSE_QUERY,\n              queryKeyFnName: camel(`get-${operationName}-query-key`),\n            },\n          ]\n        : []),\n      ...(query?.useSuspenseInfiniteQuery ||\n      operationQueryOptions?.useSuspenseInfiniteQuery\n        ? [\n            {\n              name: camel(`${operationName}-suspense-infinite`),\n              options: query?.options,\n              type: QueryType.SUSPENSE_INFINITE,\n              queryParam: query?.useInfiniteQueryParam,\n              queryKeyFnName: camel(`get-${operationName}-infinite-query-key`),\n            },\n          ]\n        : []),\n    ];\n\n    // Convert \"param: Type\" to \"param?: Type\" for queryKey functions\n    // to enable cache invalidation without type assertion\n    const makeParamsOptional = (params: string) => {\n      if (!params) return '';\n      // Handle parameters with default values: \"param?: Type = value\" -> \"param: Type = value\" (remove optional marker)\n      // Handle regular parameters: \"param: Type\" -> \"param?: Type\"\n      return params.replaceAll(\n        /(\\w+)(\\?)?:\\s*([^=,}]*?)\\s*(=\\s*[^,}]*)?([,}]|$)/g,\n        (match, paramName, optionalMarker, type, defaultValue, suffix) => {\n          // If parameter has a default value, don't add '?' (it's already effectively optional)\n          if (defaultValue) {\n            return `${paramName}: ${type.trim()}${defaultValue}${suffix}`;\n          }\n          // Otherwise, make it optional\n          return `${paramName}?: ${type.trim()}${suffix}`;\n        },\n      );\n    };\n\n    const uniqueQueryOptionsByKeys = queries.filter(\n      (obj, index, self) =>\n        index ===\n        self.findIndex((t) => t.queryKeyFnName === obj.queryKeyFnName),\n    );\n\n    implementation += `\n${\n  !queryKeyMutator\n    ? uniqueQueryOptionsByKeys.reduce((acc, queryOption) => {\n        const queryKeyProps = makeParamsOptional(\n          toObjectString(\n            props.filter((prop) => prop.type !== GetterPropType.HEADER),\n            'implementation',\n          ),\n        );\n\n        const routeString =\n          isVue(outputClient) || override.query.shouldSplitQueryKey\n            ? getRouteAsArray(route) // Note: this is required for reactivity to work, we will lose it if route params are converted into string, only as array they will be tracked // TODO: add tests for this\n            : `\\`${route}\\``;\n\n        // Use operation ID as query key if enabled, otherwise use route string\n        const queryKeyIdentifier = override.query.useOperationIdAsQueryKey\n          ? operationName\n          : routeString;\n\n        // Note: do not unref() params in Vue - this will make key lose reactivity\n        const queryKeyFn = `\n${override.query.shouldExportQueryKey ? 'export ' : ''}const ${queryOption.queryKeyFnName} = (${queryKeyProps}) => {\n    return [\n    ${[\n      queryOption.type === QueryType.INFINITE ||\n      queryOption.type === QueryType.SUSPENSE_INFINITE\n        ? `'infinate'`\n        : '',\n      queryKeyIdentifier,\n      queryParams ? '...(params ? [params]: [])' : '',\n      body.implementation,\n    ]\n      .filter((x) => !!x)\n      .join(', ')}\n    ] as const;\n    }\n`;\n        return acc + queryKeyFn;\n      }, '')\n    : ''\n}`;\n\n    implementation += `\n    ${queries.reduce((acc, queryOption) => {\n      return (\n        acc +\n        generateQueryImplementation({\n          queryOption,\n          operationName,\n          queryProperties,\n          queryKeyProperties,\n          params,\n          props,\n          mutator,\n          isRequestOptions,\n          queryParams,\n          response,\n          outputClient,\n          httpClient,\n          isExactOptionalPropertyTypes,\n          hasSignal: getHasSignal({\n            overrideQuerySignal: override.query.signal,\n            verb,\n          }),\n          queryOptionsMutator,\n          queryKeyMutator,\n          route,\n          hasVueQueryV4,\n          hasSvelteQueryV4,\n          hasSvelteQueryV6,\n          hasQueryV5,\n          hasQueryV5WithDataTagError,\n          hasQueryV5WithInfiniteQueryOptionsError,\n          doc,\n          usePrefetch: query.usePrefetch,\n          useQuery: query.useQuery,\n          useInfinite: query.useInfinite,\n        })\n      );\n    }, '')}\n`;\n\n    mutators =\n      queryOptionsMutator || queryKeyMutator\n        ? [\n            ...(queryOptionsMutator ? [queryOptionsMutator] : []),\n            ...(queryKeyMutator ? [queryKeyMutator] : []),\n          ]\n        : undefined;\n  }\n\n  if (isMutation) {\n    const mutationOptionsMutator = query.mutationOptions\n      ? await generateMutator({\n          output,\n          mutator: query.mutationOptions,\n          name: `${operationName}MutationOptions`,\n          workspace: context.workspace,\n          tsconfig: context.output.tsconfig,\n        })\n      : undefined;\n\n    const definitions = props\n      .map(({ definition, type }) =>\n        type === GetterPropType.BODY\n          ? mutator?.bodyTypeName\n            ? `data: ${mutator.bodyTypeName}<${body.definition}>`\n            : `data: ${body.definition}`\n          : definition,\n      )\n      .join(';');\n\n    const properties = props\n      .map(({ name, type }) => (type === GetterPropType.BODY ? 'data' : name))\n      .join(',');\n\n    const errorType = getQueryErrorType(\n      operationName,\n      response,\n      httpClient,\n      mutator,\n    );\n\n    const dataType = mutator?.isHook\n      ? `ReturnType<typeof use${pascal(operationName)}Hook>`\n      : `typeof ${operationName}`;\n\n    const mutationOptionFnReturnType = getQueryOptionsDefinition({\n      operationName,\n      mutator,\n      definitions,\n      hasSvelteQueryV4,\n      hasQueryV5,\n      hasQueryV5WithInfiniteQueryOptionsError,\n      isReturnType: true,\n    });\n\n    const mutationArguments = generateQueryArguments({\n      operationName,\n      definitions,\n      mutator,\n      isRequestOptions,\n      hasSvelteQueryV4,\n      hasQueryV5,\n      hasQueryV5WithInfiniteQueryOptionsError,\n      httpClient,\n    });\n\n    const mutationOptionsFnName = camel(\n      mutationOptionsMutator || mutator?.isHook\n        ? `use-${operationName}-mutationOptions`\n        : `get-${operationName}-mutationOptions`,\n    );\n\n    const mutationOptionsVarName = isRequestOptions\n      ? 'mutationOptions'\n      : 'options';\n\n    const hooksOptionImplementation = getHooksOptionImplementation(\n      isRequestOptions,\n      httpClient,\n      camel(operationName),\n      mutator,\n    );\n\n    const mutationOptionsFn = `export const ${mutationOptionsFnName} = <TError = ${errorType},\n    TContext = unknown>(${mutationArguments}): ${mutationOptionFnReturnType} => {\n\n${hooksOptionImplementation}\n\n      ${\n        mutator?.isHook\n          ? `const ${operationName} =  use${pascal(operationName)}Hook()`\n          : ''\n      }\n\n\n      const mutationFn: MutationFunction<Awaited<ReturnType<${dataType}>>, ${\n        definitions ? `{${definitions}}` : 'void'\n      }> = (${properties ? 'props' : ''}) => {\n          ${properties ? `const {${properties}} = props ?? {};` : ''}\n\n          return  ${operationName}(${properties}${\n            properties ? ',' : ''\n          }${getMutationRequestArgs(isRequestOptions, httpClient, mutator)})\n        }\n\n        ${\n          mutationOptionsMutator\n            ? `const customOptions = ${\n                mutationOptionsMutator.name\n              }({...mutationOptions, mutationFn}${\n                mutationOptionsMutator.hasSecondArg\n                  ? `, { url: \\`${route.replaceAll('/${', '/{')}\\` }`\n                  : ''\n              }${\n                mutationOptionsMutator.hasThirdArg\n                  ? `, { operationId: '${operationId}', operationName: '${operationName}' }`\n                  : ''\n              });`\n            : ''\n        }\n\n\n  return  ${\n    mutationOptionsMutator\n      ? 'customOptions'\n      : '{ mutationFn, ...mutationOptions }'\n  }}`;\n\n    const operationPrefix = hasSvelteQueryV4 ? 'create' : 'use';\n    const optionalQueryClientArgument = hasQueryV5\n      ? ', queryClient?: QueryClient'\n      : '';\n\n    implementation += `\n${mutationOptionsFn}\n\n    export type ${pascal(\n      operationName,\n    )}MutationResult = NonNullable<Awaited<ReturnType<${dataType}>>>\n    ${\n      body.definition\n        ? `export type ${pascal(operationName)}MutationBody = ${\n            mutator?.bodyTypeName\n              ? `${mutator.bodyTypeName}<${body.definition}>`\n              : body.definition\n          }`\n        : ''\n    }\n    export type ${pascal(operationName)}MutationError = ${errorType}\n\n    ${doc}export const ${camel(\n      `${operationPrefix}-${operationName}`,\n    )} = <TError = ${errorType},\n    TContext = unknown>(${mutationArguments} ${optionalQueryClientArgument})${generateMutatorReturnType(\n      {\n        outputClient,\n        dataType,\n        variableType: definitions ? `{${definitions}}` : 'void',\n      },\n    )} => {\n\n      const ${mutationOptionsVarName} = ${mutationOptionsFnName}(${\n        isRequestOptions ? 'options' : 'mutationOptions'\n      });\n\n      return ${operationPrefix}Mutation(${\n        hasSvelteQueryV6\n          ? `() => ({ ...${mutationOptionsVarName}${optionalQueryClientArgument ? ', queryClient' : ''} })`\n          : `${mutationOptionsVarName}${optionalQueryClientArgument ? ', queryClient' : ''}`\n      });\n    }\n    `;\n\n    mutators = mutationOptionsMutator\n      ? [...(mutators ?? []), mutationOptionsMutator]\n      : mutators;\n  }\n\n  return {\n    implementation,\n    mutators,\n  };\n};\n\nexport const generateQueryHeader: ClientHeaderBuilder = (params) => {\n  return `${\n    params.hasAwaitedType\n      ? ''\n      : `type AwaitedInput<T> = PromiseLike<T> | T;\\n\n      type Awaited<O> = O extends AwaitedInput<infer T> ? T : never;\\n\\n`\n  }\n${\n  params.isRequestOptions && params.isMutator\n    ? `type SecondParameter<T extends (...args: never) => unknown> = Parameters<T>[1];\\n\\n`\n    : ''\n}\n${getQueryHeader(params)}\n`;\n};\n\nexport const generateQuery: ClientBuilder = async (\n  verbOptions,\n  options,\n  outputClient,\n) => {\n  const imports = generateVerbImports(verbOptions);\n  const functionImplementation = generateQueryRequestFunction(\n    verbOptions,\n    options,\n    isVue(outputClient),\n  );\n  const { implementation: hookImplementation, mutators } =\n    await generateQueryHook(verbOptions, options, outputClient);\n\n  return {\n    implementation: `${functionImplementation}\\n\\n${hookImplementation}`,\n    imports,\n    mutators,\n  };\n};\n\nconst dependenciesBuilder: Record<\n  'react-query' | 'vue-query' | 'svelte-query',\n  ClientDependenciesBuilder\n> = {\n  'react-query': getReactQueryDependencies,\n  'vue-query': getVueQueryDependencies,\n  'svelte-query': getSvelteQueryDependencies,\n};\n\nexport const builder =\n  ({\n    type = 'react-query',\n    options: queryOptions,\n    output,\n  }: {\n    type?: 'react-query' | 'vue-query' | 'svelte-query';\n    options?: QueryOptions;\n    output?: NormalizedOutputOptions;\n  } = {}) =>\n  () => {\n    const client: ClientBuilder = (verbOptions, options, outputClient) => {\n      if (\n        options.override.useNamedParameters &&\n        (type === 'vue-query' || outputClient === 'vue-query')\n      ) {\n        throw new Error(\n          `vue-query client does not support named parameters, and had broken reactivity previously, please set useNamedParameters to false; See for context: https://github.com/orval-labs/orval/pull/931#issuecomment-1752355686`,\n        );\n      }\n\n      if (queryOptions) {\n        const normalizedQueryOptions = normalizeQueryOptions(\n          queryOptions,\n          options.context.workspace,\n        );\n        verbOptions.override.query = mergeDeep(\n          normalizedQueryOptions,\n          verbOptions.override.query,\n        );\n        options.override.query = mergeDeep(\n          normalizedQueryOptions,\n          verbOptions.override.query,\n        );\n      }\n      return generateQuery(verbOptions, options, outputClient, output);\n    };\n\n    return {\n      client: client,\n      header: generateQueryHeader,\n      dependencies: dependenciesBuilder[type],\n    };\n  };\n\nexport default builder;\n"],"mappings":"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"}